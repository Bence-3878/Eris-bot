# -*- coding: utf-8 -*-
# commands/__init__.py
# Parancsok regisztr√°ci√≥ja

from commands.ping import register_ping_command


# El√©rhet≈ë parancsok registry
AVAILABLE_COMMANDS = {
    "ping": register_ping_command,
    # "stats": register_stats_command,  # K√©s≈ëbb hozz√°adhat√≥
    # "help": register_help_command,
}


def register_commands_for_guild(tree, client, guild, enabled_commands):
    """
    Parancsok regisztr√°l√°sa egy adott szerverre
    
    Args:
        tree: CommandTree p√©ld√°ny
        client: Discord Client p√©ld√°ny
        guild: Discord Guild objektum
        enabled_commands: Enged√©lyezett parancsok list√°ja (pl. ["ping", "stats"])
    """
    registered_count = 0
    
    for cmd_name in enabled_commands:
        if cmd_name in AVAILABLE_COMMANDS:
            try:
                AVAILABLE_COMMANDS[cmd_name](tree, client, guild=guild)
                registered_count += 1
            except Exception as e:
                print(f"  ‚úó Hiba a '{cmd_name}' regisztr√°l√°sakor: {e}")
        else:
            print(f"  ‚ö†Ô∏è Ismeretlen parancs: {cmd_name}")
    
    return registered_count


def get_available_commands():
    """√ñsszes el√©rhet≈ë parancs nev√©nek list√°ja"""
    return list(AVAILABLE_COMMANDS.keys())


def register_commands(tree, client):
    """
    √ñsszes parancs regisztr√°l√°sa

    Args:
        tree: Discord CommandTree p√©ld√°ny
        client: Discord Client p√©ld√°ny
    """
    # Parancsok regisztr√°l√°sa √©s a visszat√©r√©si √©rt√©k haszn√°lata
    ping_cmd = register_ping_command(tree, client)
    print(f"‚úì Parancs regisztr√°lva: {ping_cmd.name if ping_cmd else 'ismeretlen'}")

    # Debug: Ellen≈ërizz√ºk, hogy t√©nyleg benne van-e a tree-ben
    all_commands = tree.get_commands()
    print(f"üîç Tree-ben l√©v≈ë parancsok: {[cmd.name for cmd in all_commands]}")

    # Tov√°bbi parancsok regisztr√°l√°sa itt...